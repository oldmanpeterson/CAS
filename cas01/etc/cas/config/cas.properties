cas.server.name:                        https://idp.example.com
cas.server.prefix:                      ${cas.server.name}/cas

logging.config:                         file:/etc/cas/config/log4j2.xml
cas.tgc.secure:                         true
cas.tgc.crypto.signing.key:             <REDACTED>
cas.tgc.crypto.encryption.key:          <REDACTED>
cas.webflow.crypto.signing.key:         <REDACTED>
cas.webflow.crypto.encryption.key:      <REDACTED>
cas.authn.accept.users=
cas.authn.pm.enabled=false

#LDAP authentication settings
cas.authn.ldap[0].name:                 LDAP
cas.authn.ldap[0].type:                 AUTHENTICATED
cas.authn.ldap[0].ldapUrl:              ldaps://ldap.example.com
cas.authn.ldap[0].validatePeriod:       270
cas.authn.ldap[0].connectTimeout:       4000
cas.authn.ldap[0].userFilter:           (|(sAMAccountName={user})(userPrincipalName={user}))
cas.authn.ldap[0].baseDn:               dc=EXAMPLE,dc=com
cas.authn.ldap[0].useSsl:               true
cas.authn.ldap[0].subtreeSearch:        true
cas.authn.ldap[0].bindDn:               cn=casldap,ou=Service_Accounts,dc=EXAMPLE,dc=com
cas.authn.ldap[0].bindCredential:       <REDACTED>
cas.authn.ldap[0].principalAttributeId: sAMAccountName
cas.authn.ldap[0].principalAttributeList: sn,cn,givenName,mail,displayName,memberOf,sAMAccountName

#LDAP attribute repository settings
cas.authn.attributeRepository.ldap[0].name:                 LDAP_REPO
cas.authn.attributeRepository.ldap[0].type:                 AUTHENTICATED
cas.authn.attributeRepository.ldap[0].ldapUrl:              ldaps://ldap.example.com
cas.authn.attributeRepository.ldap[0].userFilter:           (|(sAMAccountName={user})(userPrincipalName={user}))
cas.authn.attributeRepository.ldap[0].baseDn:               dc=EXAMPLE,dc=com
cas.authn.attributeRepository.ldap[0].useSsl:               true
cas.authn.attributeRepository.ldap[0].subtreeSearch:        true
cas.authn.attributeRepository.ldap[0].bindDn:               cn=casldap,ou=Service_Accounts,dc=EXAMPLE,dc=com
cas.authn.attributeRepository.ldap[0].bindCredential:       <REDACTED>
cas.authn.attributeRepository.ldap[0].attributes.sAMAccountName=sAMAccountName
cas.authn.attributeRepository.ldap[0].attributes.userPrincipalName=userPrincipalName
cas.authn.attributeRepository.ldap[0].attributes.memberOf=memberOf
cas.authn.attributeRepository.ldap[0].attributes.mail=mail
cas.authn.attributeRepository.ldap[0].attributes.sn=sn
cas.authn.attributeRepository.ldap[0].attributes.cn=commonName
cas.authn.attributeRepository.ldap[0].attributes.givenName=givenName
cas.authn.attributeRepository.ldap[0].attributes.displayName=displayName

#Dashboard
cas.adminPagesSecurity.actuatorEndpointsEnabled:        true
cas.monitor.endpoints.enabled:                          true
endpoints.enabled:                                      true
cas.adminPagesSecurity.ip:                              ^172\\.16\\.(24|25|26|27)\\.[0-9]{1,3}|172\\.16\\.20\\.(53|54|55)$
cas.monitor.endpoints.sensitive:                        false
endpoints.sensitive:                                    false
cas.adminPagesSecurity.loginUrl:                        ${cas.server.prefix}/login
cas.adminPagesSecurity.service:                         ${cas.server.prefix}/status/dashboard
#cas.adminPagesSecurity.users:                           file:/etc/cas/config/admusers.properties
#cas.adminPagesSecurity.adminRoles[0]:                   ROLE_ADMIN
cas.adminPagesSecurity.adminRoles[0]:                   GS-ITADMINS

#saml
cas.authn.samlIdp.entityId:             ${cas.server.prefix}/idp
cas.authn.samlIdp.scope:                example.com
cas.authn.samlIdp.logout.forceSignedLogoutRequests:  false

#MongoDB
mongo.db:                              casdb
mongo.rs:                              rs0
mongo.opts:                            &ssl=true
mongo.creds:                           mongocas:<REDACTED>
mongo.hosts:                           cas01.ipa.example.com,cas02.ipa.example.com
mongo.uri:                             mongodb://${mongo.creds}@${mongo.hosts}/${mongo.db}?replicaSet=${mongo.rs}${mongo.opts}

#Ticket and Service registries
cas.ticket.registry.mongo.clientUri:   ${mongo.uri}
cas.serviceRegistry.mongo.clientUri:    ${mongo.uri}
cas.serviceRegistry.mongo.collection:   casServiceRegistry

#OAUTH
cas.authn.oauth.userProfileViewType=FLAT

#Kerberos auth settings
cas.authn.spnego.jcifsServicePrincipal=HTTP/idp.ipa.example.com@IPA.EXAMPLE.COM
cas.authn.spnego.jcifsDomain=IPA.EXAMPLE.COM
cas.authn.spnego.kerberosRealm=IPA.EXAMPLE.COM
cas.authn.spnego.ntlmAllowed=false
cas.authn.spnego.kerberosConf=/etc/cas/config/krb5.conf
cas.authn.spnego.mixedModeAuthentication=true
cas.authn.spnego.ipsToCheckPattern=10\\.+|172\\.16\\.+

#Google Auth Multi-factor
cas.authn.mfa.gauth.issuer=EXAMPLE_CAS
cas.authn.mfa.gauth.mongo.clientUri=mongodb://${mongo.creds}@${mongo.hosts}/${mongo.db}?replicaSet=${mongo.rs}${mongo.opts}
cas.authn.mfa.gauth.mongo.dropCollection=false
cas.authn.mfa.gauth.mongo.collection=MongoDbGoogleAuthenticatorRepository
cas.authn.mfa.gauth.mongo.tokenCollection=MongoDbGoogleAuthenticatorTokenRepository
